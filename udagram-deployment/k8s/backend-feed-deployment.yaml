apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: backend-feed
  name: backend-feed
spec:
  selector:
    matchLabels:
      app: backend-feed
  replicas: 1
  template:
    metadata:
      labels:
        app: backend-feed
    spec:
      containers:
      - image: manickaa/backend-api-feed
        name: backend-feed
        imagePullPolicy: Always  
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "1024Mi"
            cpu: "500m"                  
        env:
        - name: URL
          #value: http://localhost:8100
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: URL
        - name: AWS_BUCKET
          #value: udagram-manickaa-prod
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_BUCKET
        - name: AWS_PROFILE
          #value: default
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_PROFILE
        - name: AWS_REGION
          #value: us-east-1
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: AWS_REGION
        - name: JWT_SECRET
          #value: hello
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: JWT_SECRET
        - name: POSTGRES_DB
          # value: postgres
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRES_DB
        - name: POSTGRES_HOST
          #value: database-udagram.cxasat4da8ny.us-east-1.rds.amazonaws.com
          valueFrom:
            configMapKeyRef:
              name: env-config
              key: POSTGRES_HOST
        - name: POSTGRES_PASSWORD
          #value: ****
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_USERNAME
          #value: ****
          valueFrom:
            secretKeyRef:
              name: env-secret
              key: POSTGRES_USERNAME      
        volumeMounts:
        - name: aws-secret
          mountPath: "/root/.aws/"
          readOnly: true        
      restartPolicy: Always
      volumes:
      - name: aws-secret
        secret:
          secretName: aws-secret